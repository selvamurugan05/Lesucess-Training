1)Find majority of element

import java.util.Scanner;

public class MajorityElementFinder {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        int n = scanner.nextInt();
        int[] arr = new int[n];

        for (int i = 0; i < n; i++) {
            arr[i] = scanner.nextInt();
        }

        System.out.println(findMajorityElement(arr));
    }

    public static int findMajorityElement(int[] nums) {
        int candidate = nums[0];
        int count = 1;

        for (int i = 1; i < nums.length; i++) {
            if (count == 0) {
                candidate = nums[i];
                count = 1;
            } else if (nums[i] == candidate) {
                count++;
            } else {
                count--;
            }
        }

        return candidate;  
    }
}


2)Maximum subarray problem



import java.util.Scanner;

public class MaximumSubarraySum {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        
        int n = scanner.nextInt();
        int[] nums = new int[n];

        for (int i = 0; i < n; i++) {
            nums[i] = scanner.nextInt();
        }

      
        System.out.println(findMaxSubarraySum(nums));
    }

    public static int findMaxSubarraySum(int[] nums) {
    
        int sum=0;

        for (int i = 0; i < nums.length; i++) {
            if(nums[i]>0){
                sum+=nums[i];
                
            }
        
            
        }

        return sum;
    }
}


3)Find the First Non-Repeating Character in a String



import java.util.Scanner;

public class FirstNonRepeatingChar {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String s = scanner.nextLine();

        System.out.println(firstNonRepeatingCharIndex(s));
    }

    public static int firstNonRepeatingCharIndex(String s) {
        int[] freq = new int[26];  

      
        for (char c : s.toLowerCase().toCharArray()) {
            freq[c - 'a']++;
        }

       
        for (int i = 0; i < s.length(); i++) {
            if (freq[Character.toLowerCase(s.charAt(i)) - 'a'] == 1) {
                return i;
            }
        }

        return -1;
    }
}



4)


import java.util.Scanner;

public class StringRotationCheck {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String s1 = scanner.nextLine();
        String s2 = scanner.nextLine();

        System.out.println(isRotation(s1, s2));
    }

    public static boolean isRotation(String s1, String s2) {
       
        if (s1.length() != s2.length() || s1.length() == 0) {
            return false;
        }

        
        String doubled = s1 + s1;

        return doubled.contains(s2);
    }
}
